<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rock.Rest</name>
    </assembly>
    <members>
        <member name="T:Rock.Rest.ApiController`1">
            <summary>
            ApiController for Rock REST Entity endpoints
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Rock.Rest.ApiController`1.Service">
            <summary>
            Gets or sets the service.
            </summary>
            <value>
            The service.
            </value>
        </member>
        <member name="M:Rock.Rest.ApiController`1.#ctor(Rock.Data.Service{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.ApiController`1"/> class.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:Rock.Rest.ApiController`1.Get">
            <summary>
            Queryable GET endpoint
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.ApiController`1.GetById(System.Int32)">
            <summary>
            GET endpoint to get a single record 
            </summary>
            <param name="id">The Id of the record</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.Get(System.Int32)">
            <summary>
            GET endpoint to get a single record 
            </summary>
            <param name="key">The Id of the record</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.Post(`0)">
            <summary>
            POST endpoint. Use this to INSERT a new record
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.Put(System.Int32,`0)">
            <summary>
            PUT endpoint. Use this to UPDATE a record
            </summary>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.Patch(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            PATCH endpoint. Use this to update a subset of the properties of the record
            </summary>
            <param name="id">The identifier.</param>
            <param name="values">The values.</param>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.Delete(System.Int32)">
            <summary>
            DELETE endpoint. To delete the record
            </summary>
            <param name="id">The identifier.</param>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.GetDataView(System.Int32)">
            <summary>
            Gets a list of objects represented by the selected data view
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.ApiController`1.LaunchWorkflow(System.Int32,System.Guid,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Launches a workflow. And optionally passes the entity with selected id as the entity for the workflow
            </summary>
            <param name="id">The Id of the entity to pass to workflow, if entity cannot be loaded workflow will still be launched but without passing an entity</param>
            <param name="workflowTypeGuid">The workflow type unique identifier.</param>
            <param name="workflowName">The Name of the workflow.</param>
            <param name="workflowAttributeValues">Optional list of workflow values to set.</param>
        </member>
        <member name="M:Rock.Rest.ApiController`1.LaunchWorkflow(System.Int32,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Launches a workflow. And optionally passes the entity with selected id as the entity for the workflow
            </summary>
            <param name="id">The Id of the entity to pass to workflow, if entity cannot be loaded workflow will still be launched but without passing an entity</param>
            <param name="workflowTypeId">The workflow type identifier.</param>
            <param name="workflowName">Name of the workflow.</param>
            <param name="workflowAttributeValues">Optional list of workflow values to set.</param>
        </member>
        <member name="M:Rock.Rest.ApiController`1.DeleteAttributeValue(System.Int32,System.String)">
            <summary>
            DELETE to delete the specified attribute value for the record
            </summary>
            <param name="id">The identifier.</param>
            <param name="attributeKey">The attribute key.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.ApiController`1.SetAttributeValue(System.Int32,System.String,System.String)">
            <summary>
            POST an attribute value. Use this to set an attribute value for the record
            </summary>
            <param name="id">The identifier.</param>
            <param name="attributeKey">The attribute key.</param>
            <param name="attributeValue">The attribute value.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
            <exception cref="T:System.Net.Http.HttpResponseMessage">
            </exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.SetContext(System.Int32)">
            <summary>
            Sets the Context Cookie to the specified record. Use this to set the Campus Context, Group Context, etc
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.CheckCanEdit(`0)">
            <summary>
            Checks the can edit.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Rest.ApiController`1.CheckCanEdit(Rock.Security.ISecured)">
            <summary>
            Checks the can edit.
            </summary>
            <param name="securedModel">The secured model.</param>
        </member>
        <member name="M:Rock.Rest.ApiController`1.CheckCanEdit(Rock.Security.ISecured,Rock.Model.Person)">
            <summary>
            Checks the can edit.
            </summary>
            <param name="securedModel">The secured model.</param>
            <param name="person">The person.</param>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.CheckCanView(Rock.Security.ISecured,Rock.Model.Person)">
            <summary>
            Checks to see if the person is authorized to VIEW
            </summary>
            <param name="securedModel">The secured model.</param>
            <param name="person">The person.</param>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.ApiController`1.SetProxyCreation(System.Boolean)">
            <summary>
            Gets or sets a value indicating whether [enable proxy creation].
            </summary>
            <value>
              <c>true</c> if [enable proxy creation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Rock.Rest.ApiController`1.IsProxy(System.Object)">
            <summary>
            Determines whether the specified type is proxy.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.ApiControllerBase">
            <summary>
            Base ApiController for Rock REST endpoints
            Supports ODataV3 Queries and ODataRouting
            </summary>
            <seealso cref="T:System.Web.Http.ApiController" />
        </member>
        <member name="M:Rock.Rest.ApiControllerBase.GetPerson">
            <summary>
            Gets the currently logged in Person
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.ApiControllerBase.GetPersonAlias">
            <summary>
            Gets the primary person alias of the currently logged in person
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsDimCampusController">
            <summary>
            AnalyticsDimCampus REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsDimCampusController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsDimCampusController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsSourceCampusController">
            <summary>
            AnalyticsSourceCampus REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsSourceCampusController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsSourceCampusController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.CommunicationTemplateAttachmentsController">
            <summary>
            CommunicationTemplateAttachments REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.CommunicationTemplateAttachmentsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.CommunicationTemplateAttachmentsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.LavaShortcodesController">
            <summary>
            LavaShortcodes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.LavaShortcodesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.LavaShortcodesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetaFirstNameGenderLookupsController">
            <summary>
            MetaFirstNameGenderLookups REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetaFirstNameGenderLookupsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetaFirstNameGenderLookupsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetaLastNameLookupsController">
            <summary>
            MetaLastNameLookups REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetaLastNameLookupsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetaLastNameLookupsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetaNickNameLookupsController">
            <summary>
            MetaNickNameLookups REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetaNickNameLookupsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetaNickNameLookupsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetaPersonicxLifestageClustersController">
            <summary>
            MetaPersonicxLifestageClusters REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetaPersonicxLifestageClustersController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetaPersonicxLifestageClustersController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetaPersonicxLifestageGroupsController">
            <summary>
            MetaPersonicxLifestageGroups REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetaPersonicxLifestageGroupsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetaPersonicxLifestageGroupsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.NcoaHistoriesController">
            <summary>
            NcoaHistories REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.NcoaHistoriesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.NcoaHistoriesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PageShortLinksController">
            <summary>
            PageShortLinks REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PageShortLinksController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PageShortLinksController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonTokensController">
            <summary>
            PersonTokens REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonTokensController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PersonTokensController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PbxController">
            <summary>
            Controller of misc utility functions that are used by Rock controls
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PbxController.Originate(System.String,System.String,System.String)">
            <summary>
            Originates the specified source phone.
            </summary>
            <param name="sourcePhone">The source phone.</param>
            <param name="destinationPhone">The destination phone.</param>
            <param name="callerId">The caller identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PbxController.Originate(System.Guid,System.String,System.String)">
            <summary>
            Originates a call using a person guid as the source and a specific destination phone number. This
            allows the system to select the source person's preferred source phone number. For instance they
            may currently have their mobile number selected as the origination number.
            </summary>
            <param name="sourcePersonGuid">The source person unique identifier.</param>
            <param name="destinationPhone">The destination phone.</param>
            <param name="callerId">The caller identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.PbxController.OriginateResponse">
            <summary>
            Return object of the Originate action
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PbxController.OriginateResponse.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Rest.Controllers.PbxController.OriginateResponse"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PbxController.OriginateResponse.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:Rock.Rest.Controllers.PbxController.GetPbxComponent(Rock.Model.Person)">
            <summary>
            Gets the PBX component.
            </summary>
            <param name="currentPerson">The current person.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.PresenceController">
            <summary>
            Personal Devices REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PresenceController.Post(System.Collections.Generic.List{Rock.Rest.Controllers.PresenceController.MACPresence})">
            <summary>
            Posts the specified presence list.
            </summary>
            <param name="presenceList">The presence list.</param>
        </member>
        <member name="T:Rock.Rest.Controllers.PresenceController.Presence">
            <summary>
            Presence Details
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PresenceController.Presence.Space">
            <summary>
            Gets or sets the wifi space (zone) where device was present.
            </summary>
            <value>
            The space.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PresenceController.Presence.Arrive">
            <summary>
            Gets or sets the arrival timestamp.
            </summary>
            <value>
            The arrive.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PresenceController.Presence.Depart">
            <summary>
            Gets or sets the departure timestamp.
            </summary>
            <value>
            The depart.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PresenceController.Presence.Duration">
            <summary>
            Gets or sets the duration of presence.
            </summary>
            <value>
            The duration.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.PresenceController.MACPresence">
            <summary>
            The presence for a device with specfic MAC address
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PresenceController.MACPresence.Mac">
            <summary>
            Gets or sets the MAC Address.
            </summary>
            <value>
            The mac.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PresenceController.MACPresence.Presence">
            <summary>
            Gets or sets the presence information
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonalDevicesController">
            <summary>
            Personal Devices REST API
            </summary>
            <summary>
            PersonalDevices REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonalDevicesController.UpdateByMACAddress(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the specified Block with extra logic to flush caches.
            </summary>
            <param name="macAddress">The MAC address of the device.</param>
            <param name="deviceIdentifier">The device identifier.</param>
            <param name="devicePlatform">The device platform.</param>
            <param name="deviceVersion">The device version.</param>
            <param name="personAliasId">The person alias identifier.</param>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonalDevicesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PersonalDevicesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AttendancesController">
            <summary>
            
            </summary>
            <summary>
            Attendances REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttendancesController.GetChartData(Rock.ChartGroupBy,Rock.Model.AttendanceGraphBy,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the chart data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.AttendancesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AttendancesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.CommunicationAttachmentsController">
            <summary>
            CommunicationAttachments REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.CommunicationAttachmentsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.CommunicationAttachmentsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.CommunicationsController">
            <summary>
            Communications REST API
            </summary>
            <summary>
            Communications REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.CommunicationsController.Send(System.Int32)">
            <summary>
            Sends a communication.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:Rock.Rest.Controllers.CommunicationsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.CommunicationsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AttributesController">
            <summary>
            Attributes REST API
            </summary>
            <summary>
            Attributes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributesController.Flush(System.Int32)">
            <summary>
            Flushes an attributes from cache.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributesController.Flush">
            <summary>
            Flushes all global attributes from cache.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributesController.Post(Rock.Model.Attribute)">
            <summary>
            Posts the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributesController.Delete(System.Int32)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributesController.Put(System.Int32,Rock.Model.Attribute)">
            <summary>
            Puts the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AttributesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AuthController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AuthController.Login(Rock.Security.LoginParameters)">
            <summary>
            Use this to Login a user and return an AuthCookie which can be used in subsequent REST calls
            </summary>
            <param name="loginParameters">The login parameters.</param>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.AuthController.FacebookLogin(Rock.Security.ExternalAuthentication.Facebook.FacebookUser)">
            <summary>
            Use this to Login a user and return an AuthCookie which can be used in subsequent REST calls
            </summary>
            <param name="facebookUser">The facebook user.</param>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.AuthController.GoogleLogin(Rock.Security.ExternalAuthentication.Google.GoogleUser)">
            <summary>
            Use this to Login a user and return an AuthCookie which can be used in subsequent REST calls
            </summary>
            <param name="googleUser">The google user.</param>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.AuthController.TwitterLogin(Rock.Security.ExternalAuthentication.Twitter.TwitterUser)">
            <summary>
            Use this to Login a user and return an AuthCookie which can be used in subsequent REST calls
            </summary>
            <param name="twitterUser">The twitter user.</param>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="T:Rock.Rest.Controllers.BinaryFilesController">
             <summary>
            
             </summary>
            <summary>
            BinaryFiles REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BinaryFilesController.Upload(System.Guid)">
            <summary>
            Uploads a file and stores it as a binary file
            </summary>
            <param name="binaryFileTypeGuid">The binary file type unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.BinaryFilesController.Upload(System.Int32)">
            <summary>
            Uploads a file and stores it as a binary file
            </summary>
            <param name="binaryFileTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.BinaryFilesController.GenerateResponse(System.Net.HttpStatusCode,System.String)">
            <summary>
            Generates the response.
            </summary>
            <param name="code">The code.</param>
            <param name="message">The message.</param>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.BinaryFilesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BinaryFilesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsDimFamilyCurrentsController">
            <summary>
            AnalyticsDimFamilyCurrents REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsDimFamilyCurrentsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsDimFamilyCurrentsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsDimFamilyHeadOfHouseholdsController">
            <summary>
            AnalyticsDimFamilyHeadOfHouseholds REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsDimFamilyHeadOfHouseholdsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsDimFamilyHeadOfHouseholdsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsDimFamilyHistoricalsController">
            <summary>
            AnalyticsDimFamilyHistoricals REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsDimFamilyHistoricalsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsDimFamilyHistoricalsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsDimFinancialAccountsController">
            <summary>
            AnalyticsDimFinancialAccounts REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsDimFinancialAccountsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsDimFinancialAccountsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsDimFinancialBatchesController">
            <summary>
            AnalyticsDimFinancialBatches REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsDimFinancialBatchesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsDimFinancialBatchesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsDimPersonCurrentsController">
            <summary>
            AnalyticsDimPersonCurrents REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsDimPersonCurrentsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsDimPersonCurrentsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsDimPersonHistoricalsController">
            <summary>
            AnalyticsDimPersonHistoricals REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsDimPersonHistoricalsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsDimPersonHistoricalsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsFactAttendancesController">
            <summary>
            AnalyticsFactAttendances REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsFactAttendancesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsFactAttendancesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsFactFinancialTransactionsController">
            <summary>
            AnalyticsFactFinancialTransactions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsFactFinancialTransactionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsFactFinancialTransactionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsSourceAttendancesController">
            <summary>
            AnalyticsSourceAttendances REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsSourceAttendancesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsSourceAttendancesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsSourceFamilyHistoricalsController">
            <summary>
            AnalyticsSourceFamilyHistoricals REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsSourceFamilyHistoricalsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsSourceFamilyHistoricalsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsSourceFinancialTransactionsController">
            <summary>
            AnalyticsSourceFinancialTransactions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsSourceFinancialTransactionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsSourceFinancialTransactionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AnalyticsSourcePersonHistoricalsController">
            <summary>
            AnalyticsSourcePersonHistoricals REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AnalyticsSourcePersonHistoricalsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AnalyticsSourcePersonHistoricalsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AttributeMatricesController">
            <summary>
            AttributeMatrices REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributeMatricesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AttributeMatricesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AttributeMatrixItemsController">
            <summary>
            AttributeMatrixItems REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributeMatrixItemsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AttributeMatrixItemsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AttributeMatrixTemplatesController">
            <summary>
            AttributeMatrixTemplates REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributeMatrixTemplatesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AttributeMatrixTemplatesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.CommunicationRecipientsController">
            <summary>
            CommunicationRecipients REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.CommunicationRecipientsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.CommunicationRecipientsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionOpportunityGroupConfigsController">
            <summary>
            ConnectionOpportunityGroupConfigs REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionOpportunityGroupConfigsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionOpportunityGroupConfigsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.InteractionChannelsController">
            <summary>
            InteractionChannels REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.InteractionChannelsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.InteractionChannelsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.InteractionComponentsController">
            <summary>
            InteractionComponents REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.InteractionComponentsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.InteractionComponentsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.InteractionDeviceTypesController">
            <summary>
            InteractionDeviceTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.InteractionDeviceTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.InteractionDeviceTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.InteractionsController">
            <summary>
            Interactions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.InteractionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.InteractionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.InteractionSessionsController">
            <summary>
            InteractionSessions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.InteractionSessionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.InteractionSessionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.NotificationRecipientsController">
            <summary>
            NotificationRecipients REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.NotificationRecipientsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.NotificationRecipientsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.NotificationsController">
            <summary>
            Notifications REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.NotificationsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.NotificationsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ScheduleCategoryExclusionsController">
            <summary>
            ScheduleCategoryExclusions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ScheduleCategoryExclusionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ScheduleCategoryExclusionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.SignatureDocumentsController">
            <summary>
            SignatureDocuments REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.SignatureDocumentsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.SignatureDocumentsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.SignatureDocumentTemplatesController">
            <summary>
            SignatureDocumentTemplates REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.SignatureDocumentTemplatesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.SignatureDocumentTemplatesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.BlocksController">
            <summary>
            Blocks REST API
            </summary>
            <summary>
            Blocks REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BlocksController.Delete(System.Int32)">
            <summary>
            Deletes the specified Block with extra logic to flush caches.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:Rock.Rest.Controllers.BlocksController.Move(System.Int32,Rock.Model.Block)">
            <summary>
            Moves a block from one zone to another
            </summary>
            <param name="id">The identifier.</param>
            <param name="block">The block.</param>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.Controllers.BlocksController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BlocksController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.CategoriesController">
            <summary>
            
            </summary>
            <summary>
            Categories REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.CategoriesController.GetChildren(System.Int32,System.Int32,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The identifier.</param>
            <param name="rootCategoryId">The root category identifier.</param>
            <param name="getCategorizedItems">if set to <c>true</c> [get categorized items].</param>
            <param name="entityTypeId">The entity type identifier.</param>
            <param name="entityQualifier">The entity qualifier.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="showUnnamedEntityItems">if set to <c>true</c> [show unnamed entity items].</param>
            <param name="showCategoriesThatHaveNoChildren">if set to <c>true</c> [show categories that have no children].</param>
            <param name="includedCategoryIds">The included category ids.</param>
            <param name="excludedCategoryIds">The excluded category ids.</param>
            <param name="defaultIconCssClass">The default icon CSS class.</param>
            <param name="includeInactiveItems">if set to <c>true</c> [include inactive items].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.CategoriesController.GetCategorizedItems(Rock.Data.IService,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets the categorized items.
            </summary>
            <param name="serviceInstance">The service instance.</param>
            <param name="categoryId">The category id.</param>
            <param name="showUnnamedEntityItems">if set to <c>true</c> [show unnamed entity items].</param>
            <param name="excludeInactiveItems">if set to <c>true</c> [exclude inactive items].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.CategoriesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.CategoriesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.CategoryItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.CategoryItem.IsCategory">
            <summary>
            Gets or sets a value indicating whether this instance is category.
            </summary>
            <value>
            <c>true</c> if this instance is category; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.AttendanceCodesController">
            <summary>
            AttendanceCodes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttendanceCodesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AttendanceCodesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AttributeQualifiersController">
            <summary>
            AttributeQualifiers REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributeQualifiersController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AttributeQualifiersController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AttributeValuesController">
            <summary>
            AttributeValues REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AttributeValuesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AttributeValuesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AuditDetailsController">
            <summary>
            AuditDetails REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AuditDetailsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AuditDetailsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AuditsController">
            <summary>
            Audits REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AuditsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AuditsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.AuthsController">
            <summary>
            Auths REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.AuthsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.AuthsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.BackgroundChecksController">
            <summary>
            BackgroundChecks REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BackgroundChecksController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BackgroundChecksController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.BenevolenceRequestDocumentsController">
            <summary>
            BenevolenceRequestDocuments REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BenevolenceRequestDocumentsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BenevolenceRequestDocumentsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.BenevolenceRequestsController">
            <summary>
            BenevolenceRequests REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BenevolenceRequestsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BenevolenceRequestsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.BenevolenceResultsController">
            <summary>
            BenevolenceResults REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BenevolenceResultsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BenevolenceResultsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.BinaryFileDatasController">
            <summary>
            BinaryFileDatas REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BinaryFileDatasController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BinaryFileDatasController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.BinaryFileTypesController">
            <summary>
            BinaryFileTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BinaryFileTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BinaryFileTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.BlockTypesController">
            <summary>
            BlockTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.BlockTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.BlockTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.CampusesController">
            <summary>
            Campuses REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.CampusesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.CampusesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.CommunicationTemplatesController">
            <summary>
            CommunicationTemplates REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.CommunicationTemplatesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.CommunicationTemplatesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionActivityTypesController">
            <summary>
            ConnectionActivityTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionActivityTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionActivityTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionOpportunitiesController">
            <summary>
            ConnectionOpportunities REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionOpportunitiesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionOpportunitiesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionOpportunityCampusController">
            <summary>
            ConnectionOpportunityCampus REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionOpportunityCampusController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionOpportunityCampusController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionOpportunityConnectorGroupsController">
            <summary>
            ConnectionOpportunityConnectorGroups REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionOpportunityConnectorGroupsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionOpportunityConnectorGroupsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionOpportunityGroupsController">
            <summary>
            ConnectionOpportunityGroups REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionOpportunityGroupsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionOpportunityGroupsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionRequestActivitiesController">
            <summary>
            ConnectionRequestActivities REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionRequestActivitiesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionRequestActivitiesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionRequestsController">
            <summary>
            ConnectionRequests REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionRequestsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionRequestsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionRequestsController.GetChildren(System.String)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionRequestWorkflowsController">
            <summary>
            ConnectionRequestWorkflows REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionRequestWorkflowsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionRequestWorkflowsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionStatusController">
            <summary>
            ConnectionStatus REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionStatusController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionStatusController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionTypesController">
            <summary>
            ConnectionTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ConnectionWorkflowsController">
            <summary>
            ConnectionWorkflows REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ConnectionWorkflowsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ConnectionWorkflowsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ContentChannelItemAssociationsController">
            <summary>
            ContentChannelItemAssociations REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ContentChannelItemAssociationsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ContentChannelItemAssociationsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ContentChannelItemsController">
            <summary>
            ContentChannelItems REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ContentChannelItemsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ContentChannelItemsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ContentChannelsController">
            <summary>
            ContentChannels REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ContentChannelsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ContentChannelsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ContentChannelTypesController">
            <summary>
            ContentChannelTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ContentChannelTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ContentChannelTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.DataViewFiltersController">
            <summary>
            DataViewFilters REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.DataViewFiltersController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.DataViewFiltersController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.DataViewsController">
            <summary>
            DataViews REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.DataViewsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.DataViewsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.DefinedTypesController">
            <summary>
            DefinedTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.DefinedTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.DefinedTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.DefinedValuesController">
            <summary>
            DefinedValues REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.DefinedValuesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.DefinedValuesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.DevicesController">
            <summary>
            Devices REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.DevicesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.DevicesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EntitySetItemsController">
            <summary>
            EntitySetItems REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EntitySetItemsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EntitySetItemsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EntitySetsController">
            <summary>
            EntitySets REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EntitySetsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EntitySetsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EntityTypesController">
            <summary>
            EntityTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EntityTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EntityTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EventCalendarContentChannelsController">
            <summary>
            EventCalendarContentChannels REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EventCalendarContentChannelsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EventCalendarContentChannelsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EventCalendarItemsController">
            <summary>
            EventCalendarItems REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EventCalendarItemsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EventCalendarItemsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EventCalendarsController">
            <summary>
            EventCalendars REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EventCalendarsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EventCalendarsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EventItemAudiencesController">
            <summary>
            EventItemAudiences REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EventItemAudiencesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EventItemAudiencesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EventItemOccurrenceChannelItemsController">
            <summary>
            EventItemOccurrenceChannelItems REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EventItemOccurrenceChannelItemsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EventItemOccurrenceChannelItemsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EventItemOccurrenceGroupMapsController">
            <summary>
            EventItemOccurrenceGroupMaps REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EventItemOccurrenceGroupMapsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EventItemOccurrenceGroupMapsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EventItemOccurrencesController">
            <summary>
            EventItemOccurrences REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EventItemOccurrencesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EventItemOccurrencesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.EventItemsController">
            <summary>
            EventItems REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.EventItemsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.EventItemsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ExceptionLogsController">
            <summary>
            ExceptionLogs REST API
            </summary>
            <summary>
            ExceptionLogs REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ExceptionLogsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ExceptionLogsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ExceptionLogsController.GetChartData">
            <summary>
            Gets the exceptions grouped by date.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.ExceptionLogsController.LogException(System.Exception)">
            <summary>
            Logs the exception.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Rock.Rest.Controllers.ExceptionLogsController.ExceptionChartData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.ExceptionLogsController.ExceptionChartData.DateTimeStamp">
            <summary>
            Gets the date time stamp.
            </summary>
            <value>
            The date time stamp.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.ExceptionLogsController.ExceptionChartData.YValue">
            <summary>
            Gets the y value.
            </summary>
            <value>
            The y value.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.ExceptionLogsController.ExceptionChartData.SeriesId">
            <summary>
            Gets the series identifier (obsolete)
            NOTE: Use MetricValuePartitionEntityIds if you are populating this with a EntityTypeId|EntityId list, or use SeriesName for a static series name
            </summary>
            <value>
            The series identifier.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.ExceptionLogsController.ExceptionChartData.SeriesName">
            <summary>
            Gets or sets the name of the series. This will be the default name of the series if MetricValuePartitionEntityIds can't be resolved
            </summary>
            <value>
            The name of the series.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.ExceptionLogsController.ExceptionChartData.MetricValuePartitionEntityIds">
            <summary>
            Gets the metric value partitions as a comma-delimited list of EntityTypeId|EntityId
            </summary>
            <value>
            The metric value entityTypeId,EntityId partitions
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.FieldTypesController">
            <summary>
            FieldTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FieldTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FieldTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialAccountsController">
            <summary>
            FinancialAccounts REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialAccountsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialAccountsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialAccountsController.GetChildren(System.Int32,System.Boolean)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The identifier.</param>
            <param name="activeOnly">if set to <c>true</c> [active only].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialAccountsController.GetChildren(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The identifier.</param>
            <param name="activeOnly">if set to <c>true</c> [active only].</param>
            <param name="displayPublicName">if set to <c>true</c> [public name].</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialBatchesController">
            <summary>
            FinancialBatches REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialBatchesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialBatchesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialGatewaysController">
            <summary>
            FinancialGateways REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialGatewaysController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialGatewaysController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialPaymentDetailsController">
            <summary>
            FinancialPaymentDetails REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialPaymentDetailsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialPaymentDetailsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialPersonBankAccountsController">
            <summary>
            FinancialPersonBankAccounts REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialPersonBankAccountsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialPersonBankAccountsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialPersonSavedAccountsController">
            <summary>
            FinancialPersonSavedAccounts REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialPersonSavedAccountsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialPersonSavedAccountsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialPledgesController">
            <summary>
            FinancialPledges REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialPledgesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialPledgesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialScheduledTransactionDetailsController">
            <summary>
            FinancialScheduledTransactionDetails REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialScheduledTransactionDetailsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialScheduledTransactionDetailsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialScheduledTransactionsController">
            <summary>
            FinancialScheduledTransactions REST API
            </summary>
            <summary>
            Additional methods for the FinancialPaymentDetails REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialScheduledTransactionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialScheduledTransactionsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialScheduledTransactionsController.GetExpiring(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets Scheduled Transactions that have a Credit Card that is going to expire in the next X days (or has expired already)
            </summary>
            <param name="numberOfDays">The number of days from now</param>
            <param name="daysBack">The number of days ago. For example, if you don't want to include ones that have already expired, set daysBack=0.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialTransactionDetailsController">
            <summary>
            FinancialTransactionDetails REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionDetailsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialTransactionDetailsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialTransactionImagesController">
            <summary>
            FinancialTransactionImages REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionImagesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialTransactionImagesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialTransactionRefundsController">
            <summary>
            FinancialTransactionRefunds REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionRefundsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialTransactionRefundsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialTransactionsController">
            <summary>
            FinancialTransactions REST API
            </summary>
             <summary>
            
             </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FinancialTransactionsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionsController.PostScanned(Rock.Model.FinancialTransactionScannedCheck)">
            <summary>
            Posts the scanned.
            </summary>
            <param name="financialTransactionScannedCheck">The financial transaction scanned check.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionsController.Post(Rock.Model.FinancialTransaction)">
            <summary>
            Posts the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionsController.AlreadyScanned(System.String)">
            <summary>
            Returns true if a transaction with the same MICR track data is already in the database
            </summary>
            <param name="scannedCheckMicr">The scanned check micr track data</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionsController.GetContributionPersonGroupAddress(Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions)">
            <summary>
            Gets the contribution person group address.
            </summary>
            <param name="options">The options.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionsController.GetContributionTransactions(System.Int32,Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions)">
            <summary>
            Gets the contribution transactions.
            </summary>
            <param name="groupId">The group unique identifier.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionsController.GetContributionTransactions(System.Int32,System.Nullable{System.Int32},Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions)">
            <summary>
            Gets the contribution transactions.
            </summary>
            <param name="personId">The person unique identifier.</param>
            <param name="groupId">The group unique identifier.</param>
            <param name="options">The options.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.FinancialTransactionsController.GetByGivingId(System.String)">
            <summary>
            Gets transactions by people with the supplied givingId.
            </summary>
            <param name="givingId">The giving ID.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="T:Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions">
             <summary>
            
             </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions.AccountIds">
            <summary>
            Gets or sets the account ids.
            </summary>
            <value>
            The account ids.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions.PersonId">
            <summary>
            Gets or sets the person id.
            </summary>
            <value>
            The person id.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions.DataViewId">
            <summary>
            Gets or sets the Person DataViewId to filter the statements to
            </summary>
            <value>
            The data view identifier.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions.IncludeIndividualsWithNoAddress">
            <summary>
            Gets or sets a value indicating whether [include individuals with no address].
            </summary>
            <value>
            <c>true</c> if [include individuals with no address]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.FinancialTransactionsController.ContributionStatementOptions.OrderByPostalCode">
            <summary>
            Gets or sets a value indicating whether [order by postal code].
            </summary>
            <value>
              <c>true</c> if [order by postal code]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.FollowingEventNotificationsController">
            <summary>
            FollowingEventNotifications REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FollowingEventNotificationsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FollowingEventNotificationsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FollowingEventSubscriptionsController">
            <summary>
            FollowingEventSubscriptions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FollowingEventSubscriptionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FollowingEventSubscriptionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FollowingEventTypesController">
            <summary>
            FollowingEventTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FollowingEventTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FollowingEventTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FollowingsController">
            <summary>
            Followings REST API
            </summary>
            <summary>
            Followings REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FollowingsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FollowingsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FollowingsController.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes the following record(s).
            </summary>
            <param name="entityTypeId">The entity type identifier.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="personId">The person identifier.</param>
        </member>
        <member name="T:Rock.Rest.Controllers.FollowingSuggestedsController">
            <summary>
            FollowingSuggesteds REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FollowingSuggestedsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FollowingSuggestedsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FollowingSuggestionTypesController">
            <summary>
            FollowingSuggestionTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FollowingSuggestionTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.FollowingSuggestionTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupLocationsController">
            <summary>
            GroupLocations REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupLocationsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupLocationsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupMemberRequirementsController">
            <summary>
            GroupMemberRequirements REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupMemberRequirementsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupMemberRequirementsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupMembersController">
            <summary>
            GroupMembers REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupMembersController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupMembersController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupMembersController.Get">
            <summary>
            Overrides base Get controller method to include deceased GroupMembers
            </summary>
            <returns>A queryable collection of GroupMembers, including deceased, that match the provided query.</returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupMembersController.CreateKnownRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the known relationship.
            </summary>
            <param name="personId">The person identifier.</param>
            <param name="relatedPersonId">The related person identifier.</param>
            <param name="relationshipRoleId">The relationship role identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupMembersController.GetKnownRelationship(System.Int32,System.Int32)">
            <summary>
            Gets the known relationship.
            </summary>
            <param name="personId">The person identifier.</param>
            <param name="relationshipRoleId">The relationship role identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupMembersController.DeleteKnownRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes the known relationship.
            </summary>
            <param name="personId">The person identifier.</param>
            <param name="relatedPersonId">The related person identifier.</param>
            <param name="relationshipRoleId">The relationship role identifier.</param>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupMemberWorkflowTriggersController">
            <summary>
            GroupMemberWorkflowTriggers REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupMemberWorkflowTriggersController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupMemberWorkflowTriggersController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupRequirementsController">
            <summary>
            GroupRequirements REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupRequirementsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupRequirementsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupRequirementTypesController">
            <summary>
            GroupRequirementTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupRequirementTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupRequirementTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupScheduleExclusionsController">
            <summary>
            GroupScheduleExclusions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupScheduleExclusionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupScheduleExclusionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupsController">
            <summary>
            Groups REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetChildren(System.Int32,System.Int32,System.Boolean,System.String,System.String,System.Boolean,Rock.Web.UI.Controls.TreeViewItem.GetCountsType,System.Int32,System.Boolean)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The identifier.</param>
            <param name="rootGroupId">The root group identifier.</param>
            <param name="limitToSecurityRoleGroups">if set to <c>true</c> [limit to security role groups].</param>
            <param name="includedGroupTypeIds">The included group type ids.</param>
            <param name="excludedGroupTypeIds">The excluded group type ids.</param>
            <param name="includeInactiveGroups">if set to <c>true</c> [include inactive groups].</param>
            <param name="countsType">Type of the counts.</param>
            <param name="campusId">if set it will filter groups based on campus</param>
            <param name="includeNoCampus">if campus set and set to <c>true</c> [include groups with no campus].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetFamilies(System.Int32)">
            <summary>
            Gets the families sorted by the person's GroupOrder (GroupMember.GroupOrder)
            </summary>
            <param name="personId">The person identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetFamiliesByPersonNameSearch(System.String)">
            <summary>
            Gets the families by name search.
            </summary>
            <param name="searchString">String to use for search.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetFamiliesByPersonNameSearch(System.String,System.Int32)">
            <summary>
            Gets the families by name search.
            </summary>
            <param name="searchString">String to use for search.</param>
            <param name="maxResults">The maximum results.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetFamily(System.Int32)">
            <summary>
            Gets the family.
            </summary>
            <param name="familyId">The family identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetGuestsForFamily(System.Int32)">
            <summary>
            Gets the guests (known relationship of can check-in) for given family.
            </summary>
            <param name="groupId">Group id of the family.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetByLocation(System.Int32,System.Int32,System.Int32,System.Web.Http.OData.Query.ODataQueryOptions{Rock.Model.Group})">
            <summary>
            Gets a group by location.
            </summary>
            <param name="geofenceGroupTypeId">The geofence group type identifier.</param>
            <param name="groupTypeId">The group type identifier.</param>
            <param name="locationId">The location identifier.</param>
            <param name="queryOptions">The query options.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetByLocation(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Double},System.Nullable{System.Int32},System.Web.Http.OData.Query.ODataQueryOptions{Rock.Model.Group})">
            <summary>
            Gets a list of groups surrounding the specified the location, optionally limited to the specified geofenceGroupTypeId
            If geofenceGroupTypeId is specified, the list of GeoFence groups will be returned with the groups as child groups of that geofence group.
            </summary>
            <param name="groupTypeId">The group type identifier.</param>
            <param name="locationId">The location identifier.</param>
            <param name="sortByDistance">if set to <c>true</c> [sort by distance].</param>
            <param name="maxDistanceMiles">The maximum distance miles.</param>
            <param name="geofenceGroupTypeId">The geofence group type identifier.</param>
            <param name="queryOptions">The query options.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetByLatLong(System.Int32,System.Double,System.Double,System.Nullable{System.Boolean},System.Nullable{System.Double},System.Nullable{System.Int32},System.Web.Http.OData.Query.ODataQueryOptions{Rock.Model.Group})">
            <summary>
            Gets a list of groups surrounding the specified lat/long, optionally limited to the specified geofenceGroupTypeId
            If geofenceGroupTypeId is specified, the list of GeoFence groups will be returned with the groups as child groups of that geofence group.
            </summary>
            <param name="groupTypeId">The group type identifier.</param>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <param name="sortByDistance">The sort by distance.</param>
            <param name="maxDistanceMiles">The maximum distance miles.</param>
            <param name="geofenceGroupTypeId">The geofence group type identifier.</param>
            <param name="queryOptions">The query options.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetByGeoPoint(System.Int32,System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Boolean},System.Nullable{System.Double},System.Nullable{System.Int32},System.Web.Http.OData.Query.ODataQueryOptions{Rock.Model.Group})">
            <summary>
            Gets a list of groups surrounding the specified geopoint of the specified GroupTypeid
            If geofenceGroupTypeId is specified, the list of GeoFence groups will be returned with the groups as child groups of that geofence group.
            </summary>
            <param name="groupTypeId">The group type identifier.</param>
            <param name="geoPoint">The geo point.</param>
            <param name="sortByDistance">if set to <c>true</c> [sort by distance].</param>
            <param name="maxDistanceMiles">The maximum distance miles.</param>
            <param name="geofenceGroupTypeId">The geofence group type identifier.</param>
            <param name="queryOptions">The query options.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.SaveAddress(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Saves a group address.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="locationTypeId">The location type identifier.</param>
            <param name="street1">The street1.</param>
            <param name="street2">The street2.</param>
            <param name="city">The city.</param>
            <param name="state">The state.</param>
            <param name="postalCode">The postal code.</param>
            <param name="country">The country.</param>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetMapInfo(System.Int32)">
            <summary>
            Gets the map information.
            </summary>
            <param name="groupId">The group identifier.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetChildMapInfo(System.Int32,System.String,System.Boolean)">
            <summary>
            Gets the child map information.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="groupTypeIds">The group type ids (comma delimited).</param>
            <param name="includeDescendants">if set to <c>true</c> [include descendants].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetMemberMapInfo(System.Int32)">
            <summary>
            Gets the member map information.
            </summary>
            <param name="groupId">The group identifier.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetFamiliesMapInfo(System.Int32,System.Int32)">
            <summary>
            Gets the families map information.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="statusId">The status identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetFamiliesMapInfo(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the families map information.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="statusId">The status identifier.</param>
            <param name="campusIds">If specified, only show families that are associated with any of the campus ids.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.GetMapInfoWindow(System.Int32,System.Int32,Rock.Rest.Controllers.GroupsController.InfoWindowRequest)">
            <summary>
            Gets the map information window.
            </summary>
            <param name="groupId">The group identifier.</param>
            <param name="locationId">The location identifier.</param>
            <param name="infoWindowDetails">The information window details.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupsController.GuestFamily">
             <summary>
            
             </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamily.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamily.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamily.Guid">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamily.FamilyMembers">
            <summary>
            Gets or sets the family members.
            </summary>
            <value>
            The family members.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupsController.GuestFamilyMember">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.PersonAliasId">
            <summary>
            Gets or sets the person alias identifier.
            </summary>
            <value>
            The person alias identifier.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.Guid">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.PhotoUrl">
            <summary>
            Gets or sets the photo URL.
            </summary>
            <value>
            The photo URL.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.CanCheckin">
            <summary>
            Gets or sets a value indicating whether this instance can checkin.
            </summary>
            <value>
            <c>true</c> if this instance can checkin; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.Age">
            <summary>
            Gets or sets the age.
            </summary>
            <value>
            The age.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.Role">
            <summary>
            Gets or sets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.GuestFamilyMember.Gender">
            <summary>
            Gets or sets the gender.
            </summary>
            <value>
            The gender.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupsController.FamilySearchResult">
             <summary>
            
             </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.FamilySearchResult.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.FamilySearchResult.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.FamilySearchResult.FamilyMembers">
            <summary>
            Gets or sets the family members.
            </summary>
            <value>
            The family members.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.FamilySearchResult.HomeLocation">
            <summary>
            Gets or sets the home location.
            </summary>
            <value>
            The home location.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.FamilySearchResult.MainPhone">
            <summary>
            Gets or sets the main phone.
            </summary>
            <value>
            The main phone.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupsController.InfoWindowRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.InfoWindowRequest.GroupPage">
            <summary>
            Gets or sets the group page.
            </summary>
            <value>
            The group page.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.InfoWindowRequest.PersonProfilePage">
            <summary>
            Gets or sets the person profile page.
            </summary>
            <value>
            The person profile page.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.InfoWindowRequest.MapPage">
            <summary>
            Gets or sets the map page.
            </summary>
            <value>
            The map page.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.InfoWindowRequest.Template">
            <summary>
            Gets or sets the template.
            </summary>
            <value>
            The template.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupsController.InfoWindowResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.GroupsController.InfoWindowResult.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupsController.InfoWindowResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupsController.InfoWindowResult"/> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupTypeRolesController">
            <summary>
            GroupTypeRoles REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupTypeRolesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupTypeRolesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.GroupTypesController">
            <summary>
            GroupTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.GroupTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.GroupTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.HistoriesController">
            <summary>
            Histories REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.HistoriesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.HistoriesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.HtmlContentsController">
            <summary>
            HtmlContents REST API
            </summary>
            <summary>
            HtmlContents REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.HtmlContentsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.HtmlContentsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.HtmlContentsController.UpdateContents(System.Int32,Rock.Rest.Controllers.HtmlContentsController.HtmlContents)">
            <summary>
            Updates the contents.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="htmlContents">The HTML contents.</param>
        </member>
        <member name="T:Rock.Rest.Controllers.HtmlContentsController.HtmlContents">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.HtmlContentsController.HtmlContents.EntityValue">
            <summary>
            Gets or sets the entity value.
            </summary>
            <value>
            The entity value.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.HtmlContentsController.HtmlContents.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.LayoutsController">
            <summary>
            Layouts REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.LayoutsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.LayoutsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.LocationsController">
            <summary>
            Locations REST API
            </summary>
            <summary>
            Locations REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.LocationsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.LocationsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.LocationsController.Verify(Rock.Model.Location)">
            <summary>
            Geocode an location
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.LocationsController.Get(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the specified street.
            </summary>
            <param name="street">The street.</param>
            <param name="city">The city.</param>
            <param name="state">The state.</param>
            <param name="postalCode">The postal code.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.LocationsController.GetChildren(System.Int32,System.Int32)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="rootLocationId">The root location unique identifier.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="T:Rock.Rest.Controllers.MergeTemplatesController">
            <summary>
            MergeTemplates REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MergeTemplatesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MergeTemplatesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetricCategoriesController">
            <summary>
            MetricCategories REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricCategoriesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetricCategoriesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetricPartitionsController">
            <summary>
            MetricPartitions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricPartitionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetricPartitionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetricsController">
            <summary>
            Metrics REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetricsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricsController.GetHtmlForBlock(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the HTML for a LiquidDashboardWidget block
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="entityTypeId">The entity type identifier.</param>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.MetricValuePartitionsController">
            <summary>
            MetricValuePartitions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricValuePartitionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetricValuePartitionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.MetricValuesController">
            <summary>
            MetricValues REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricValuesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.MetricValuesController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricValuesController.GetByMetricId(System.Int32,System.Nullable{Rock.Model.MetricValueType})">
            <summary>
            Gets the by metric identifier.
            NOTE: The Chart blocks use ODATA to further filter this
            </summary>
            <param name="metricId">The metric identifier.</param>
            <param name="metricValueType">Type of the metric value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricValuesController.GetSummary(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Rock.Model.MetricValueType},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the summary.
            </summary>
            <param name="metricIdList">The metric identifier list.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="metricValueType">Type of the metric value.</param>
            <param name="entityTypeId">The entity type identifier.</param>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.MetricValuesController.MetricSummary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricValuesController.MetricSummary.MetricId">
            <summary>
            Gets or sets the metric identifier.
            </summary>
            <value>
            The metric identifier.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricValuesController.MetricSummary.MetricTitle">
            <summary>
            Gets or sets the metric title.
            </summary>
            <value>
            The metric title.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricValuesController.MetricSummary.YValueTotal">
            <summary>
            Gets or sets the y value total.
            </summary>
            <value>
            The y value total.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricValuesController.MetricSummary.StartDateTimeStamp">
            <summary>
            Gets or sets the start date time stamp.
            </summary>
            <value>
            The start date time stamp.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricValuesController.MetricSummary.EndDateTimeStamp">
            <summary>
            Gets or sets the end date time stamp.
            </summary>
            <value>
            The end date time stamp.
            </value>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricValuesController.GetSeriesName(System.Int32,System.Int32)">
            <summary>
            Gets the name of the series.
            </summary>
            <param name="metricId">The metric identifier.</param>
            <param name="seriesId">The series identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricValuesController.GetSeriesPartitionName(System.Int32,System.String)">
            <summary>
            Gets the name of the series partition.
            </summary>
            <param name="metricId">The metric identifier.</param>
            <param name="metricValuePartitionEntityIds">The metric value partition entity ids.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.MetricValuesController.GetSeriesPartitionName(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the name of the series partition using POST
            </summary>
            <param name="metricId">The metric identifier.</param>
            <param name="metricValuePartitionEntityIdList">The metric value partition entity identifier list.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.NotesController">
            <summary>
            Notes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.NotesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.NotesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.NoteTypesController">
            <summary>
            NoteTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.NoteTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.NoteTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PageContextsController">
            <summary>
            PageContexts REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PageContextsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PageContextsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PageRoutesController">
            <summary>
            PageRoutes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PageRoutesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PageRoutesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PagesController">
            <summary>
            Pages REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PagesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PagesController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PagesController.GetChildren(System.Int32,System.String)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The id.</param>
            <param name="hidePageIds">List of pages that should not be included in results</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.PeopleController">
            <summary>
            People REST API
            </summary>
             <summary>
            
             </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PeopleController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetById(System.Int32)">
            <summary>
            GET endpoint to get a single person record
            </summary>
            <param name="id">The Id of the record</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.Get(System.Int32)">
            <summary>
            GET endpoint to get a single person record
            </summary>
            <param name="key">The Id of the record</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.Get">
            <summary>
            Queryable GET endpoint. Note that records that are marked as Deceased are not included
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.Get(System.Boolean)">
            <summary>
            Queryable GET endpoint with an option to include person records that have been marked as Deceased
            </summary>
            <param name="includeDeceased">if set to <c>true</c> [include deceased].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetCurrentPerson">
            <summary>
            Gets the currently authenticated person
            </summary>
            <returns>A person</returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetByEmail(System.String)">
            <summary>
            Searches the person records based on the specified email address
            </summary>
            <param name="email">The email.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetByPhoneNumber(System.String)">
            <summary>
            Searches the person records based on the specified phone number. NOTE that partial matches are included
            </summary>
            <param name="number">The phone number.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetByUserName(System.String)">
            <summary>
            GET a person record based on the specified username
            </summary>
            <param name="username">The username.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetPotentialDuplicates(System.String,System.String)">
            <summary>
            Gets a list of people's names, email, gender and birthdate, to see if there are potential duplicates.
            For example, you might want to use this during account creation to warn that the person might already have an account.
            </summary>
            <param name="lastName">The last name.</param>
            <param name="emailAddress">The email address.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.PeopleController.DuplicatePersonInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PeopleController.DuplicatePersonInfo.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PeopleController.DuplicatePersonInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PeopleController.DuplicatePersonInfo.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PeopleController.DuplicatePersonInfo.Gender">
            <summary>
            Gets or sets the gender.
            </summary>
            <value>
            The gender.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PeopleController.DuplicatePersonInfo.BirthMonth">
            <summary>
            Gets or sets the birth month.
            </summary>
            <value>
            The birth month.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PeopleController.DuplicatePersonInfo.BirthDay">
            <summary>
            Gets or sets the birth day.
            </summary>
            <value>
            The birth day.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PeopleController.DuplicatePersonInfo.BirthYear">
            <summary>
            Gets or sets the birth year.
            </summary>
            <value>
            The birth year.
            </value>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetByPersonAliasId(System.Int32)">
            <summary>
            GET the Person by person alias identifier.
            </summary>
            <param name="personAliasId">The person alias identifier.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetGraduationYear(System.Int32)">
            <summary>
            Gets the graduation year based on the provided GradeOffset
            </summary>
            <param name="gradeOffset">The grade offset for the person.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.Post(Rock.Model.Person)">
            <summary>
            Adds a new person and puts them into a new family
            </summary>
            <param name="person">The person.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.AddNewPersonToFamily(Rock.Model.Person,System.Int32,System.Int32)">
            <summary>
            Adds a new person and adds them to the specified family.
            </summary>
            <param name="person">The person.</param>
            <param name="familyId">The family identifier.</param>
            <param name="groupRoleId">The group role identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.AddExistingPersonToFamily(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adds the existing person to family, optionally removing them from any other families they belong to
            </summary>
            <param name="personId">The person identifier.</param>
            <param name="familyId">The family identifier.</param>
            <param name="groupRoleId">The group role identifier.</param>
            <param name="removeFromOtherFamilies">if set to <c>true</c> [remove from other families].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.Search(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns results to the Person Picker
            </summary>
            <param name="name">The name.</param>
            <param name="includeHtml">if set to <c>true</c> [include HTML].</param>
            <param name="includeDetails">if set to <c>true</c> [include details].</param>
            <param name="includeBusinesses">if set to <c>true</c> [include businesses].</param>
            <param name="includeDeceased">if set to <c>true</c> [include deceased].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetSearchDetails(System.Int32)">
            <summary>
            Gets the search details (for the person picker)
            </summary>
            <param name="Id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.SearchWithDetails(System.Linq.IQueryable{Rock.Model.Person},System.Boolean)">
            <summary>
            Returns a List of PersonSearchRecord based on the sorted person query
            </summary>
            <param name="sortedPersonQry">The sorted person qry.</param>
            <param name="showFullNameReversed">if set to <c>true</c> [show full name reversed].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetPersonSearchDetails(Rock.Rest.Controllers.PersonSearchResult,Rock.Model.Person)">
            <summary>
            Gets the person search details.
            </summary>
            <param name="personSearchResult">The person search result.</param>
            <param name="person">The person.</param>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetImpersonationParameterObsolete(System.Int32)">
            <summary>
            Obsolete: Gets the search details
            </summary>
            <param name="personId">The person identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetImpersonationParameter(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates and stores a new PersonToken for a person using the specified ExpireDateTime, UsageLimit, and Page
            Returns the encrypted URLEncoded Token along with the ImpersonationParameter key in the form of "rckipid={ImpersonationParameter}"
            </summary>
            <param name="personId">The person identifier.</param>
            <param name="expireDateTime">The expire date time.</param>
            <param name="usageLimit">The usage limit.</param>
            <param name="pageId">The page identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetPopupHtml(System.Int32)">
            <summary>
            Gets the popup html for the selected person
            </summary>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.GetPopupHtml(System.Int32,System.Boolean)">
            <summary>
            Gets the popup html for the selected person
            </summary>
            <param name="personId">The person id.</param>
            <param name="emailAsLink">Determines if the email address should be formatted as a link.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PeopleController.Delete(System.Int32)">
            <summary>
            DELETE endpoint for a Person Record. NOTE: Person records can not be deleted using REST, so this will always return a 405
            </summary>
            <param name="id">The identifier.</param>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonAliasController">
            <summary>
            PersonAlias REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonAliasController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PersonAliasController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonBadgesController">
            <summary>
            PersonBadges REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonBadgesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PersonBadgesController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonBadgesController.GetInGroupOfType(System.Int32,System.Guid)">
            <summary>
            Gets the attendance summary data for the 24 month attendance badge
            </summary>
            <param name="personId">The person id.</param>
            <param name="groupTypeGuid">The group type unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonBadgesController.GetGroupWithPurpose(System.Int32,System.Guid)">
            <summary>
            Gets the attendance summary data for the 24 month attendance badge
            </summary>
            <param name="personId">The person id.</param>
            <param name="definedValueGuid">The defined value unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonBadgesController.GetGeofencingGroups(System.Int32,System.Guid)">
            <summary>
            Returns groups that are a specified type and geofence a given person
            </summary>
            <param name="personId">The person id.</param>
            <param name="groupTypeGuid">The group type unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonBadgesController.GetWeeksAttendedInDuration(System.Int32,System.Int32)">
            <summary>
            Gets the attendance summary data for the 24 month attendance badge
            </summary>
            <param name="personId">The person id.</param>
            <param name="weekCount">The week count.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonBadgesController.GetLastVisitOnSite(System.Int32,System.Int32)">
            <summary>
            Gets the attendance summary data for the 24 month attendance badge
            </summary>
            <param name="personId">The person id.</param>
            <param name="siteId">The site identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonBadgesController.GetFamilyAttendance(System.Int32,System.Int32)">
            <summary>
            Gets the attendance summary data for the 24 month attendance badge
            </summary>
            <param name="personId">The person id.</param>
            <param name="monthCount">The month count.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonBadgesController.InteractionsInRange(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the the number of interactions in a given date range
            </summary>
            <param name="personId">The person id.</param>
            <param name="interactionChannelId">The interaction channel identifier.</param>
            <param name="delimitedDateRange">The delimited date range value.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult">
            <summary>
            Result set for group of type badge
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult.GroupTypeId">
            <summary>
            Gets or sets the group type id of the group.
            </summary>
            <value>
            The group type id.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult.GroupTypeName">
            <summary>
            Gets or sets the group type name.
            </summary>
            <value>
            The group type name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult.GroupTypeIconCss">
            <summary>
            Gets or sets the group type icon css.
            </summary>
            <value>
            The group type icon css.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult.PersonId">
            <summary>
            Gets or sets the person id of the individual.
            </summary>
            <value>
            The person id.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult.NickName">
            <summary>
            Gets or sets the person nick name of the individual.
            </summary>
            <value>
            The nick name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult.LastName">
            <summary>
            Gets or sets the person last name of the individual.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult.PersonInGroup">
            <summary>
            Gets or sets whether the given person is in a group of this type.
            </summary>
            <value>
            Whether the person is in a group of this type.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupOfTypeResult.GroupList">
            <summary>
            Gets or sets a list of groups the person is in.
            </summary>
            <value>List of groups that the person is in.</value>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonBadgesController.GroupWithPurposeResult">
            <summary>
            Result set for group with purpose badge
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupWithPurposeResult.Purpose">
            <summary>
            Gets or sets the purpose.
            </summary>
            <value>
            The purpose.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupWithPurposeResult.PersonId">
            <summary>
            Gets or sets the person id of the individual.
            </summary>
            <value>
            The person id.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupWithPurposeResult.NickName">
            <summary>
            Gets or sets the person nick name of the individual.
            </summary>
            <value>
            The nick name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupWithPurposeResult.LastName">
            <summary>
            Gets or sets the person last name of the individual.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupWithPurposeResult.PersonInGroup">
            <summary>
            Gets or sets whether the given person is in a group of this type.
            </summary>
            <value>
            Whether the person is in a group of this type.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupWithPurposeResult.GroupList">
            <summary>
            Gets or sets a list of groups the person is in.
            </summary>
            <value>List of groups that the person is in.</value>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonBadgesController.GroupSummary">
            <summary>
            Summary of a group for use in the group of type result
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupSummary.GroupId">
            <summary>
            Gets or sets the group id of the group.
            </summary>
            <value>
            The group type id.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupSummary.GroupName">
            <summary>
            Gets or sets the group name.
            </summary>
            <value>
            The group type name.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupSummary.RoleName">
            <summary>
            Gets or sets the group member role name.
            </summary>
            <value>
            The group member role name.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonBadgesController.GroupAndLeaderInfo">
            <summary>
            Group and Leader name info
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupAndLeaderInfo.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>
            The name of the group.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.GroupAndLeaderInfo.LeaderNames">
            <summary>
            Gets or sets the leader names.
            </summary>
            <value>
            The leader names.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonBadgesController.MonthlyAttendanceSummary">
            <summary>
            Monthly attendance summary structure
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.MonthlyAttendanceSummary.AttendanceCount">
            <summary>
            Gets or sets the number of times the unit attended.
            </summary>
            <value>
            The number of attendances.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.MonthlyAttendanceSummary.SundaysInMonth">
            <summary>
            Gets or sets the number of Sundays in the month
            </summary>
            <value>
            The number of Sundays.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.MonthlyAttendanceSummary.Month">
            <summary>
            Gets or sets the month.
            </summary>
            <value>
            The month of the attendance.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonBadgesController.MonthlyAttendanceSummary.Year">
            <summary>
            Gets or sets the year.
            </summary>
            <value>The year.</value>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonDuplicatesController">
            <summary>
            PersonDuplicates REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonDuplicatesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PersonDuplicatesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonPreviousNamesController">
            <summary>
            PersonPreviousNames REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonPreviousNamesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PersonPreviousNamesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonViewedsController">
            <summary>
            PersonVieweds REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PersonViewedsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PersonViewedsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PhoneNumbersController">
            <summary>
            PhoneNumbers REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PhoneNumbersController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PhoneNumbersController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PluginMigrationsController">
            <summary>
            PluginMigrations REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PluginMigrationsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PluginMigrationsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.PrayerRequestsController">
            <summary>
            PrayerRequests REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PrayerRequestsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.PrayerRequestsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.PrayerRequestsController.Public">
            <summary>
            Queryable GET of PrayerRequest records that Public, Active, Approved and not expired
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PrayerRequestsController.GetByCategory(System.Int32)">
            <summary>
            Queryable GET of Prayer Requests for the specified top-level category
            Prayer Requests that are in categories that are decendents of the specified category will also be included
            </summary>
            <param name="categoryId">The category identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.PrayerRequestsController.Prayed(System.Int32,System.Int32)">
            <summary>
            Increment the prayer count for a prayer request
            </summary>
            <param name="prayerId">The prayer identifier.</param>
            <param name="personAliasId">The person alias identifier.</param>
            <exception cref="T:System.Web.Http.OData.IEdmEntityObject"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.PrayerRequestsController.Flag(System.Int32)">
            <summary>
            Flags the specified prayer request.
            </summary>
            <param name="id">The identifier.</param>
            <exception cref="T:System.Web.Http.OData.IEdmEntityObject"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.PrayerRequestsController.Prayed(System.Int32)">
            <summary>
            Increment the prayer count for a prayer request
            </summary>
            <param name="id">The prayer identifier.</param>
            <exception cref="T:System.Web.Http.OData.IEdmEntityObject"></exception>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationInstancesController">
            <summary>
            RegistrationInstances REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationInstancesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationInstancesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationRegistrantFeesController">
            <summary>
            RegistrationRegistrantFees REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationRegistrantFeesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationRegistrantFeesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationRegistrantsController">
            <summary>
            RegistrationRegistrants REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationRegistrantsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationRegistrantsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationsController">
            <summary>
            Registrations REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationTemplateDiscountsController">
            <summary>
            RegistrationTemplateDiscounts REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationTemplateDiscountsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationTemplateDiscountsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationTemplateFeesController">
            <summary>
            RegistrationTemplateFees REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationTemplateFeesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationTemplateFeesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationTemplateFormFieldsController">
            <summary>
            RegistrationTemplateFormFields REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationTemplateFormFieldsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationTemplateFormFieldsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationTemplateFormsController">
            <summary>
            RegistrationTemplateForms REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationTemplateFormsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationTemplateFormsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RegistrationTemplatesController">
            <summary>
            RegistrationTemplates REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RegistrationTemplatesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RegistrationTemplatesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ReportFieldsController">
            <summary>
            ReportFields REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ReportFieldsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ReportFieldsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ReportsController">
            <summary>
            Reports REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ReportsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ReportsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RestActionsController">
            <summary>
            RestActions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RestActionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RestActionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.RestControllersController">
            <summary>
            RestControllers REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RestControllersController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.RestControllersController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.RestControllersController.EnsureRestControllers">
            <summary>
            Ensures that rest controllers have been registered to the Rock Database
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.SchedulesController">
            <summary>
            Schedules REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.SchedulesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.SchedulesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ServiceJobsController">
            <summary>
            ServiceJobs REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ServiceJobsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ServiceJobsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.ServiceLogsController">
            <summary>
            ServiceLogs REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.ServiceLogsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.ServiceLogsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.SiteDomainsController">
            <summary>
            SiteDomains REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.SiteDomainsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.SiteDomainsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.SitesController">
            <summary>
            Sites REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.SitesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.SitesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.SystemEmailsController">
            <summary>
            SystemEmails REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.SystemEmailsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.SystemEmailsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.TaggedItemsController">
            <summary>
            TaggedItems REST API
            </summary>
            <summary>
            TaggedItems REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.TaggedItemsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.TaggedItemsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.TaggedItemsController.Post(System.Int32,System.Int32,System.Guid,System.String,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Boolean})">
            <summary>
            Posts the specified entity type identifier.
            </summary>
            <param name="entityTypeId">The entity type identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <param name="entityGuid">The entity unique identifier.</param>
            <param name="name">The name.</param>
            <param name="entityQualifier">The entity qualifier.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="categoryGuid">The category unique identifier.</param>
            <param name="includeInactive">The include inactive.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.TaggedItemsController.Delete(System.Int32,System.Int32,System.Guid,System.String,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Boolean})">
            <summary>
            Deletes the specified entity type identifier.
            </summary>
            <param name="entityTypeId">The entity type identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <param name="entityGuid">The entity unique identifier.</param>
            <param name="name">The name.</param>
            <param name="entityQualifier">The entity qualifier.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="categoryGuid">The category unique identifier.</param>
            <param name="includeInactive">The include inactive.</param>
            <exception cref="T:System.Web.Http.HttpResponseException">
            </exception>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="T:Rock.Rest.Controllers.TagsController">
            <summary>
            Tags REST API
            </summary>
            <summary>
            TaggedItems REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.TagsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.TagsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.TagsController.Get(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            GET a specific Tag
            </summary>
            <param name="entityTypeId">The entity type identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <param name="name">The name.</param>
            <param name="entityQualifier">The entity qualifier.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="categoryGuid">The category unique identifier.</param>
            <param name="includeInactive">The include inactive.</param>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="M:Rock.Rest.Controllers.TagsController.AvailableNames(System.Int32,System.Int32,System.Guid,System.String,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Boolean})">
            <summary>
            Queryable GET of Tags
            </summary>
            <param name="entityTypeId">The entity type identifier.</param>
            <param name="ownerId">The owner identifier.</param>
            <param name="entityGuid">The entity unique identifier.</param>
            <param name="name">The name.</param>
            <param name="entityQualifier">The entity qualifier.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="categoryGuid">The category unique identifier.</param>
            <param name="includeInactive">The include inactive.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.UserLoginsController">
            <summary>
            UserLogins REST API
            </summary>
            <summary>
            Users REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.UserLoginsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.UserLoginsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.UserLoginsController.Available(System.String)">
            <summary>
            Tests if a username is available
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.UserLoginsController.Post(Rock.Model.UserLogin)">
            <summary>
            Posts the specified value.
            POST using <see cref="T:Rock.Model.UserLoginWithPlainTextPassword"/> and set PlainTextPassword to set a password.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.UserLoginsController.Put(System.Int32,Rock.Model.UserLogin)">
            <summary>
            Puts the specified identifier.
            PUT using <see cref="T:Rock.Model.UserLoginWithPlainTextPassword"/> and set PlainTextPassword to set a password.
            </summary>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Rock.Rest.Controllers.UserLoginsController.SetPasswordFromRest(Rock.Model.UserLogin)">
            <summary>
            Sets the password from rest.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowActionFormAttributesController">
            <summary>
            WorkflowActionFormAttributes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowActionFormAttributesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowActionFormAttributesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowActionFormsController">
            <summary>
            WorkflowActionForms REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowActionFormsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowActionFormsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowActionsController">
            <summary>
            WorkflowActions REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowActionsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowActionsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowActionTypesController">
            <summary>
            WorkflowActionTypes REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowActionTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowActionTypesController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowActionTypesController.GetChildren(System.String)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowActionTypesController.GetCategorizedActions">
            <summary>
            Gets the categorized actions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowActivitiesController">
            <summary>
            WorkflowActivities REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowActivitiesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowActivitiesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowActivityTypesController">
            <summary>
            WorkflowActivityTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowActivityTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowActivityTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowLogsController">
            <summary>
            WorkflowLogs REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowLogsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowLogsController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowsController">
            <summary>
            Workflows REST API
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowsController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowsController"/> class.
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowsController.WorkflowEntry(System.Int32)">
            <summary>
            Initiates a new workflow
            </summary>
            <param name="workflowTypeId">The workflow type identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowTriggersController">
            <summary>
            WorkflowTriggers REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowTriggersController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowTriggersController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.WorkflowTypesController">
            <summary>
            WorkflowTypes REST API
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.WorkflowTypesController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Rest.Controllers.WorkflowTypesController"/> class.
            </summary>
        </member>
        <member name="T:Rock.Rest.Controllers.FileBrowserController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.FileBrowserController.GetFileThumbnail(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets the file thumbnail
            </summary>
            <param name="relativeFilePath">The relative file path.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
            <example>
              <![CDATA[ <img src='api/FileBrowser/GetFileThumbnail?relativeFilePath=External+Site%5cMarketing%5cFunnyCat.gif&width=100&height=100 ]]>
            </example>
        </member>
        <member name="M:Rock.Rest.Controllers.FileBrowserController.ResizeAndSendImage(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Resizes the and send image.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="fullPath">The full path.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.LavaController">
            <summary>
            Controller of misc utility functions that are used by Rock controls
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.LavaController.RenderTemplate(System.String,System.String)">
            <summary>
            Renders the template.
            </summary>
            <param name="template">The template.</param>
            <param name="additionalMergeObjects">Any additional merge objects as a comma-delimited-list of EntityTypeId|MergeKey|EntityId</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.MergeFieldsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.MergeFieldsController.Get(System.String)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.MergeFieldsController.GetChildren(System.String,System.String)">
            <summary>
            Gets the children.
            </summary>
            <param name="id">The identifier.</param>
            <param name="additionalFields">The additional fields.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Controllers.MetricYTDData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricYTDData.LastValue">
            <summary>
            Gets or sets the last value.
            </summary>
            <value>
            The last value.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricYTDData.LastValueDate">
            <summary>
            Gets or sets the last value date.
            </summary>
            <value>
            The last value date.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricYTDData.CumulativeValue">
            <summary>
            Gets or sets the cumulative value.
            </summary>
            <value>
            The cumulative value.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.MetricYTDData.GoalValue">
            <summary>
            Gets or sets the goal value.
            </summary>
            <value>
            The goal value.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.PersonSearchResult">
             <summary>
            
             </summary>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.Name">
            <summary>
            Gets or sets the full name last first.
            </summary>
            <value>
            The full name last first.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.ImageHtmlTag">
            <summary>
            Gets or sets the image HTML tag.
            </summary>
            <value>
            The image HTML tag.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.Age">
            <summary>
            Gets or sets the age in years
            NOTE: returns -1 if age is unknown
            </summary>
            <value>The age.</value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.FormattedAge">
            <summary>
            Gets or sets the formatted age.
            </summary>
            <value>
            The formatted age.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.Gender">
            <summary>
            Gets or sets the gender.
            </summary>
            <value>The gender.</value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.ConnectionStatus">
            <summary>
            Gets or sets the connection status.
            </summary>
            <value>The connection status.</value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.RecordStatus">
            <summary>
            Gets or sets the record status.
            </summary>
            <value>The member status.</value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.SpouseName">
            <summary>
            Gets or sets the name of the spouse.
            </summary>
            <value>
            The name of the spouse.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.PickerItemDetailsHtml">
            <summary>
            Gets or sets the picker item details HTML.
            </summary>
            <value>
            The picker item details HTML.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.PickerItemDetailsImageHtml">
            <summary>
            Gets or sets the picker item details image HTML.
            </summary>
            <value>
            The picker item details image HTML.
            </value>
        </member>
        <member name="P:Rock.Rest.Controllers.PersonSearchResult.PickerItemDetailsPersonInfoHtml">
            <summary>
            Gets or sets the picker item details person information HTML.
            </summary>
            <value>
            The picker item details person information HTML.
            </value>
        </member>
        <member name="T:Rock.Rest.Controllers.UtilityController">
            <summary>
            Controller of misc utility functions that are used by Rock controls
            </summary>
        </member>
        <member name="M:Rock.Rest.Controllers.UtilityController.CalculateSlidingDateRange(Rock.Web.UI.Controls.SlidingDateRangePicker.SlidingDateRangeType,Rock.Web.UI.Controls.SlidingDateRangePicker.TimeUnitType,System.Int32)">
            <summary>
            Calculates the sliding date range for the SlidingDateRange control (called from client side) and returns a string representing the date range
            </summary>
            <param name="slidingDateRangeType">Type of the sliding date range. </param>
            <param name="timeUnitType">Type of the time unit. Hour = 0, Day = 1, Week = 2, Month = 3, Year = 4</param>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.UtilityController.GetSlidingDateRangeTextValue(Rock.Web.UI.Controls.SlidingDateRangePicker.SlidingDateRangeType,Rock.Web.UI.Controls.SlidingDateRangePicker.TimeUnitType,System.Int32)">
            <summary>
            Calculates the sliding date range text value for the SlidingDateRange control (called from client side) and returns a string of the sliding date range picker values in text format (Last 4 Weeks, etc)
            </summary>
            <param name="slidingDateRangeType">Type of the sliding date range. </param>
            <param name="timeUnitType">Type of the time unit. Hour = 0, Day = 1, Week = 2, Month = 3, Year = 4</param>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.UtilityController.GetCampusContext">
            <summary>
            Gets the campus context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.UtilityController.GetRockSemanticVersionNumber">
            <summary>
            Gets the rock semantic version number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Rest.Controllers.UtilityController.TextToWorkflow(System.String,System.String,System.String)">
            <summary>
            Initiates a new workflow
            </summary>
            <param name="fromNumber">From number.</param>
            <param name="toNumber">To number.</param>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Swagger.RockSwaggerHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Swagger.RockSwaggerHelper.RockVersionSupportResolverAndControllerFilter(System.Web.Http.Description.ApiDescription,System.String)">
            <summary>
            Rocks the version support resolver and controller filter.
            Filters the Swagger Doc to only include the actions for the specified controller
            </summary>
            <param name="apiDesc">The API desc.</param>
            <param name="targetApiVersion">The target API version.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.Swagger.RockDocumentFilter">
            <summary>
            
            </summary>
            <seealso cref="T:Swashbuckle.Swagger.IDocumentFilter" />
        </member>
        <member name="M:Rock.Rest.Swagger.RockDocumentFilter.Apply(Swashbuckle.Swagger.SwaggerDocument,Swashbuckle.Swagger.SchemaRegistry,System.Web.Http.Description.IApiExplorer)">
            <summary>
            Applies the specified swagger document.
            </summary>
            <param name="swaggerDoc">The swagger document.</param>
            <param name="schemaRegistry">The schema registry.</param>
            <param name="apiExplorer">The API explorer.</param>
        </member>
        <member name="T:Rock.Rest.Swagger.RockOperationFilter">
            <summary>
            
            </summary>
            <seealso cref="T:Swashbuckle.Swagger.IOperationFilter" />
        </member>
        <member name="M:Rock.Rest.Swagger.RockOperationFilter.Apply(Swashbuckle.Swagger.Operation,Swashbuckle.Swagger.SchemaRegistry,System.Web.Http.Description.ApiDescription)">
            <summary>
            Applies the specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <param name="schemaRegistry">The schema registry.</param>
            <param name="apiDescription">The API description.</param>
        </member>
        <member name="T:Rock.Rest.Swagger.SwaggerConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Swagger.SwaggerConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="T:Rock.Rest.Swagger.SwaggerExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Swagger.SwaggerExtensions.Parameter(System.Collections.Generic.IList{Swashbuckle.Swagger.Parameter},System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object[])">
            <summary>
            Adds a new parameter and returns a reference to parameter list
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="name">The name.</param>
            <param name="in">The in.</param>
            <param name="description">The description.</param>
            <param name="type">The type.</param>
            <param name="required">if set to <c>true</c> [required].</param>
            <param name="format">The format.</param>
            <param name="enum">The enum.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Rest.WebApiConfig">
             <summary>
            
             </summary>
        </member>
        <member name="M:Rock.Rest.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Maps ODataService Route and registers routes for any controller actions that use a [Route] attribute
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="T:Rock.Rest.Constraints.ValidControllerNameConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Constraints.ValidControllerNameConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
            <summary>
            Determines whether this instance equals a specified route.
            </summary>
            <param name="request">The request.</param>
            <param name="route">The route to compare.</param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="values">A list of parameter values.</param>
            <param name="routeDirection">The route direction.</param>
            <returns>
            True if this instance equals a specified route; otherwise, false.
            </returns>
        </member>
        <member name="T:Rock.Rest.EnableCorsFromOriginAttribute">
            <summary>
            
            </summary>
            <seealso cref="T:System.Attribute" />
            <seealso cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />
        </member>
        <member name="M:Rock.Rest.EnableCorsFromOriginAttribute.GetCorsPolicyAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="T:System.Web.Cors.CorsPolicy" />.
            </summary>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Web.Cors.CorsPolicy" />.
            </returns>
        </member>
        <member name="T:Rock.Rest.Filters.AuthenticateAttribute">
            <summary>
            
            </summary>
            <seealso cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />
        </member>
        <member name="M:Rock.Rest.Filters.AuthenticateAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Calls when a process requests authorization.
            </summary>
            <param name="actionContext">The action context, which encapsulates information for using <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
        </member>
        <member name="T:Rock.Rest.Filters.RequireHttpsAttribute">
            <summary>
            
            </summary>
            <seealso cref="T:System.Web.Http.Filters.ActionFilterAttribute" />
        </member>
        <member name="M:Rock.Rest.Filters.RequireHttpsAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The action context.</param>
        </member>
        <member name="T:Rock.Rest.Filters.SecuredAttribute">
            <summary>
            Checks to see if the Logged-In person has authorization View (HttpMethod: GET) or Edit (all other HttpMethods) for the RestController and Controller's associated EntityType
            </summary>
        </member>
        <member name="M:Rock.Rest.Filters.SecuredAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The action context.</param>
        </member>
        <member name="T:Rock.Rest.Filters.ValidateAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.Filters.ValidateAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The action context.</param>
        </member>
        <member name="T:Rock.Rest.RockApiExceptionHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Rest.RockApiExceptionHandler.ShouldHandle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
            <summary>
            Determines whether the exception should be handled.
            </summary>
            <param name="context">The exception handler context.</param>
            <returns>
            true if the exception should be handled; otherwise, false.
            </returns>
        </member>
        <member name="M:Rock.Rest.RockApiExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
            <summary>
            When overridden in a derived class, handles the exception synchronously.
            </summary>
            <param name="context">The exception handler context.</param>
        </member>
        <member name="T:Rock.Rest.RockApiExceptionLogger">
            <summary>
            Logs all unhandled API Exceptions to the database
            </summary>
        </member>
        <member name="M:Rock.Rest.RockApiExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
            <summary>
            </summary>
            <param name="context">The exception logger context.</param>
        </member>
        <member name="T:Rock.Rest.IHasCustomRoutes">
            <summary>
            Interface for controllers that need to add additional routes beyond the default
            api/{controller}/{id} route.
            </summary>
        </member>
        <member name="M:Rock.Rest.IHasCustomRoutes.AddRoutes(System.Web.Routing.RouteCollection)">
            <summary>
            Adds the routes.
            </summary>
            <param name="routes">The routes.</param>
        </member>
        <member name="T:Rock.Controllers.SearchController">
            <summary>
            Search REST API
            </summary>
        </member>
        <member name="M:Rock.Controllers.SearchController.Get">
            <summary>
            GET that returns a list of results based on the Search Type and Term
            </summary>
            <returns></returns>
            <exception cref="T:System.Web.Http.HttpResponseException"></exception>
        </member>
        <member name="T:System.Web.Http.NakedBodyAttribute">
            <summary>
            An attribute that captures the entire content body and stores it
            into the parameter of type string or byte[].
            </summary>
            <remarks>
            The parameter marked up with this attribute should be the only parameter as it reads the
            entire request body and assigns it to that parameter.    
            </remarks>
        </member>
        <member name="M:System.Web.Http.NakedBodyAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
            <summary>
            Gets the parameter binding.
            </summary>
            <param name="parameter">The parameter description.</param>
            <returns>
            The parameter binding.
            </returns>
            <exception cref="T:System.ArgumentException">Invalid parameter</exception>
        </member>
        <member name="T:System.Web.Http.HttpRequestMessageExtensions">
            <summary>
            Extends the HttpRequestMessage collection
            </summary>
        </member>
        <member name="M:System.Web.Http.HttpRequestMessageExtensions.GetQueryStrings(System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns a dictionary of QueryStrings that's easier to work with 
            than GetQueryNameValuePairs KevValuePairs collection.
            
            If you need to pull a few single values use GetQueryString instead.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Http.HttpRequestMessageExtensions.GetQueryString(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Returns an individual querystring value
            </summary>
            <param name="request"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Http.HttpRequestMessageExtensions.GetHeader(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Returns an individual HTTP Header value
            </summary>
            <param name="request"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Http.HttpRequestMessageExtensions.GetCookie(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Retrieves an individual cookie from the cookies collection
            </summary>
            <param name="request"></param>
            <param name="cookieName"></param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Web.WebApi.NakedBodyParameterBinding">
            <summary>
            Reads the Request body into a string/byte[] and
            assigns it to the parameter bound.
            
            Should only be used with a single parameter on
            a Web API method using the [NakedBody] attribute
            </summary>
        </member>
        <member name="M:Westwind.Web.WebApi.NakedBodyParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Westwind.Web.WebApi.NakedBodyParameterBinding"/> class.
            </summary>
            <param name="descriptor">An <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> that describes the parameters.</param>
        </member>
        <member name="M:Westwind.Web.WebApi.NakedBodyParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
            <summary>
            Check for simple
            </summary>
            <param name="metadataProvider"></param>
            <param name="actionContext"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Westwind.Web.WebApi.NakedBodyParameterBinding.WillReadBody">
            <summary>
            Returns a value indicating whether this <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> instance will read the entity body of the HTTP message.
            </summary>
        </member>
        <member name="T:Westwind.Web.WebApi.EmptyTask">
            <summary>
            A do nothing task that can be returned
            from functions that require task results
            when there's nothing to do.
            
            This essentially returns a completed task
            with an empty value structure result.
            </summary>
        </member>
        <member name="M:Westwind.Web.WebApi.EmptyTask.Start">
            <summary>
            Starts this instance.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
